// <auto-generated />
using System;
using Flipper;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flipper.Migrations
{
    [DbContext(typeof(FlipperContext))]
    [Migration("20230831204316_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("Flipper.Models.Cards", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("baseType")
                        .HasColumnType("TEXT");

                    b.Property<float>("chaosValue")
                        .HasColumnType("REAL");

                    b.Property<int>("count")
                        .HasColumnType("INTEGER");

                    b.Property<float>("divineValue")
                        .HasColumnType("REAL");

                    b.Property<float>("fullStackChaosPrice")
                        .HasColumnType("REAL");

                    b.Property<float>("fullStackDivinePrice")
                        .HasColumnType("REAL");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("idCards")
                        .HasColumnType("INTEGER");

                    b.Property<string>("itemFromCard")
                        .HasColumnType("TEXT");

                    b.Property<int?>("itemFromCardCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("itemFromCardIsCorrupted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float?>("pptpc")
                        .HasColumnType("REAL");

                    b.Property<float?>("pptpd")
                        .HasColumnType("REAL");

                    b.Property<float?>("profitChaos")
                        .HasColumnType("REAL");

                    b.Property<float?>("profitChaosPerTrade")
                        .HasColumnType("REAL");

                    b.Property<float?>("profitDivine")
                        .HasColumnType("REAL");

                    b.Property<float?>("profitDivinePerTrade")
                        .HasColumnType("REAL");

                    b.Property<int>("stackSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Flipper.Models.Description", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cardsid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Gemid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Uniqid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Cardsid");

                    b.HasIndex("Gemid");

                    b.HasIndex("Uniqid");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("Flipper.Models.Gem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("baseType")
                        .HasColumnType("TEXT");

                    b.Property<float>("chaosValue")
                        .HasColumnType("REAL");

                    b.Property<int>("count")
                        .HasColumnType("INTEGER");

                    b.Property<float>("divineValue")
                        .HasColumnType("REAL");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("idCards")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Gem");
                });

            modelBuilder.Entity("Flipper.Models.Uniq", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("baseType")
                        .HasColumnType("TEXT");

                    b.Property<float>("chaosValue")
                        .HasColumnType("REAL");

                    b.Property<int>("count")
                        .HasColumnType("INTEGER");

                    b.Property<float>("divineValue")
                        .HasColumnType("REAL");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("idCards")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("links")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Uniqs");
                });

            modelBuilder.Entity("Flipper.Repository.Currency", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("chaosEquivalent")
                        .HasColumnType("REAL");

                    b.Property<string>("detailsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("divineEquivalent")
                        .HasColumnType("REAL");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Flipper.Models.Description", b =>
                {
                    b.HasOne("Flipper.Models.Cards", null)
                        .WithMany("explicitModifiers")
                        .HasForeignKey("Cardsid");

                    b.HasOne("Flipper.Models.Gem", null)
                        .WithMany("explicitModifiers")
                        .HasForeignKey("Gemid");

                    b.HasOne("Flipper.Models.Uniq", null)
                        .WithMany("explicitModifiers")
                        .HasForeignKey("Uniqid");
                });

            modelBuilder.Entity("Flipper.Models.Cards", b =>
                {
                    b.Navigation("explicitModifiers");
                });

            modelBuilder.Entity("Flipper.Models.Gem", b =>
                {
                    b.Navigation("explicitModifiers");
                });

            modelBuilder.Entity("Flipper.Models.Uniq", b =>
                {
                    b.Navigation("explicitModifiers");
                });
#pragma warning restore 612, 618
        }
    }
}
